{"ast":null,"code":"import _slicedToArray from\"/Users/victoriachiamaka/Desktop/cakeapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useReducer}from\"react\";import CartContext from\"./cart-context\";import{jsx as _jsx}from\"react/jsx-runtime\";var defaultCartState={items:[],totalAmount:0};//To check if there are items in the cart\nvar cartReducer=function cartReducer(state,action){if(action.type===\"ADD\"){var updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;var updatedItems=state.items.concat(action.item);return{items:updatedItems,totalAmount:updatedTotalAmount};}return defaultCartState;};var CartProvider=function CartProvider(props){var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispatchCartAction=_useReducer2[1];var addItemToCartHandler=function addItemToCartHandler(item){dispatchCartAction({type:\"ADD\",item:item});};var removeItemFromCartHandler=function removeItemFromCartHandler(id){dispatchCartAction({type:\"REMOVE\",id:id});};var cartContext={items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItemToCartHandler,removeItem:removeItemFromCartHandler};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});};export default CartProvider;","map":{"version":3,"sources":["/Users/victoriachiamaka/Desktop/cakeapp/src/components/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,C,2CAEA,GAAMC,CAAAA,gBAAgB,CAAG,CACvBC,KAAK,CAAE,EADgB,CAEvBC,WAAW,CAAE,CAFU,CAAzB,CAKA;AACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACrC,GAAIA,MAAM,CAACC,IAAP,GAAgB,KAApB,CAA2B,CACzB,GAAMC,CAAAA,kBAAkB,CACtBH,KAAK,CAACF,WAAN,CAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,CAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADtD,CAGA,GAAMC,CAAAA,YAAY,CAAGP,KAAK,CAACH,KAAN,CAAYW,MAAZ,CAAmBP,MAAM,CAACG,IAA1B,CAArB,CACA,MAAO,CACLP,KAAK,CAAEU,YADF,CAELT,WAAW,CAAEK,kBAFR,CAAP,CAID,CACD,MAAOP,CAAAA,gBAAP,CACD,CAZD,CAcA,GAAMa,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,gBAAwChB,UAAU,CAChDK,WADgD,CAEhDH,gBAFgD,CAAlD,4CAAOe,SAAP,iBAAkBC,kBAAlB,iBAIA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACT,IAAD,CAAU,CACrCQ,kBAAkB,CAAC,CAAEV,IAAI,CAAE,KAAR,CAAeE,IAAI,CAAEA,IAArB,CAAD,CAAlB,CACD,CAFD,CAGA,GAAMU,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,EAAD,CAAQ,CACxCH,kBAAkB,CAAC,CAAEV,IAAI,CAAE,QAAR,CAAkBa,EAAE,CAAEA,EAAtB,CAAD,CAAlB,CACD,CAFD,CAGA,GAAMC,CAAAA,WAAW,CAAG,CAClBnB,KAAK,CAAEc,SAAS,CAACd,KADC,CAElBC,WAAW,CAAEa,SAAS,CAACb,WAFL,CAGlBmB,OAAO,CAAEJ,oBAHS,CAIlBK,UAAU,CAAEJ,yBAJM,CAApB,CAMA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEE,WAA7B,UACGN,KAAK,CAACS,QADT,EADF,CAKD,CAtBD,CAwBA,cAAeV,CAAAA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\n//To check if there are items in the cart\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}